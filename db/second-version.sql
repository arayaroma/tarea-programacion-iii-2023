-- TABLES

-- TABLE TBL_GENERAL_INFORMATION
CREATE TABLE EVACOMUNA."TBL_GENERAL_INFORMATION" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "NAME" VARCHAR2(32) NOT NULL ENABLE,
    "EMAIL" VARCHAR2(64) NOT NULL ENABLE,
    "PHOTO" BLOB NOT NULL ENABLE,
    CONSTRAINT "TBL_GENERAL_INFORMATION_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS" LOB (
    "PHOTO"
) STORE AS SECUREFILE (
    TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192 NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES
);

-- TABLE TBL_HTML_TEMPLATE
CREATE TABLE EVACOMUNA."TBL_HTML_TEMPLATE" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "NAME" VARCHAR2(32) NOT NULL ENABLE,
    "TEMPLATE" CLOB NOT NULL ENABLE,
    CONSTRAINT "TBL_HTML_TEMPLATE_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS" LOB (
    "TEMPLATE"
) STORE AS SECUREFILE (
    TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192 NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES
);

-- TABLE TBL_USER
CREATE TABLE EVACOMUNA."TBL_USER" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "USERNAME" VARCHAR2(20) NOT NULL ENABLE,
    "PASSWORD" VARCHAR2(16) NOT NULL ENABLE,
    "NAME" VARCHAR2(16) NOT NULL ENABLE,
    "LASTNAME" VARCHAR2(16) NOT NULL ENABLE,
    "SECONDLASTNAME" VARCHAR2(16) NOT NULL ENABLE,
    "IDENTIFICATION" VARCHAR2(9) NOT NULL ENABLE,
    "EMAIL" VARCHAR2(64) NOT NULL ENABLE,
    "LANDLINENUMBER" VARCHAR2(8) NOT NULL ENABLE,
    "PHONENUMBER" VARCHAR2(8) NOT NULL ENABLE,
    "ISACTIVE" CHAR(1) DEFAULT 'N' NOT NULL ENABLE,
    "ISADMIN" CHAR(1) DEFAULT 'N' NOT NULL ENABLE,
    "PASSWORDCHANGED" VARCHAR2(1) DEFAULT 'N' NOT NULL ENABLE,
    "ACTIVATIONCODE" VARCHAR2(100),
    "USERPOSITIONID" NUMBER(38, 0) NOT NULL ENABLE,
    "PROFILEPHOTO" BLOB,
    CONSTRAINT "TBL_USER_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_USER_UK1" UNIQUE ("USERNAME") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_USER_UK2" UNIQUE ("IDENTIFICATION") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT TBL_USER_CHECK_PASSWORDCHANGED CHECK (PASSWORDCHANGED IN ('Y', 'N')) ENABLE,
    CONSTRAINT TBL_USER_CHECK_ISACTIVE CHECK (ISACTIVE IN ('Y', 'N')) ENABLE,
    CONSTRAINT TBL_USER_CHECK_ISADMIN CHECK (ISADMIN IN ('Y', 'N')) ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS" LOB (
    "PROFILEPHOTO"
) STORE AS SECUREFILE (
    TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192 NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES
);

-- TABLE TBL_POSITION
CREATE TABLE EVACOMUNA."TBL_POSITION" (
    "ID" NUMBER(*, 0) NOT NULL ENABLE,
    "NAME" VARCHAR2(24) NOT NULL ENABLE,
    "STATE" VARCHAR2(20) DEFAULT 'inactive' NOT NULL ENABLE,
    CONSTRAINT "TBL_POSITION_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_POSITION_CHECK" CHECK (STATE IN ('inactive', 'active')) ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_POSITION_SKILL
CREATE TABLE EVACOMUNA."TBL_POSITION_SKILL" (
    "POSITIONID" NUMBER(38, 0) NOT NULL ENABLE,
    "SKILLID" NUMBER(38, 0) NOT NULL ENABLE
);

-- TABLE TBL_SKILL
CREATE TABLE EVACOMUNA."TBL_SKILL" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "NAME" VARCHAR2(24) NOT NULL ENABLE,
    "STATE" CHAR(8) DEFAULT 'inactive' NOT NULL ENABLE,
    CONSTRAINT "TBL_SKILL_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_SKILL_CHECK" CHECK (STATE IN ('inactive', 'active')) ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_SKILL_CHARACTERISTIC
CREATE TABLE EVACOMUNA."TBL_SKILL_CHARACTERISTIC" (
    "SKILLID" NUMBER(38, 0) NOT NULL ENABLE,
    "CHARACTERISTICID" NUMBER(38, 0) NOT NULL ENABLE
);

-- TABLE TBL_CHARACTERISTIC
CREATE TABLE EVACOMUNA."TBL_CHARACTERISTIC" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "NAME" VARCHAR2(100) NOT NULL ENABLE,
    CONSTRAINT "TBL_CHARACTERISTIC_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE EVALUATION
CREATE TABLE EVACOMUNA."TBL_EVALUATION" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "NAME" VARCHAR2(24) NOT NULL ENABLE,
    "INITIALPERIOD" DATE NOT NULL ENABLE,
    "FINALPERIOD" DATE NOT NULL ENABLE,
    "APPLICATIONDATE" DATE NOT NULL ENABLE,
    "STATE" VARCHAR2(24) DEFAULT 'under construction' NOT NULL ENABLE,
    CONSTRAINT "TBL_EVALUATION_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_EVALUATION_CHECK" CHECK ( STATE IN ( 'under construction', 'in application', 'under review', 'completed' ) ) ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_ASSIGNED_EVALUATION
CREATE TABLE EVACOMUNA."TBL_ASSIGNED_EVALUATION" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "NOTE" VARCHAR2(100) NOT NULL ENABLE,
    "ROLE" VARCHAR2(24) NOT NULL ENABLE,
    "EVALUATEDID" NUMBER(38, 0) NOT NULL ENABLE,
    "EVALUATORID" NUMBER(38, 0) NOT NULL ENABLE,
    "EVALUATIONID" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_ASSIGNED_EVALUATION_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_ASSIGNED_EVALUATION_CHECK" CHECK (ROLE IN ('client', 'coworker', 'leader')) ENABLE,
    CONSTRAINT "TBL_ASSIGNED_EVALUATION_EVALUATED_UK" UNIQUE ("EVALUATEDID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_ASSIGNED_EVALUATION_EVALUATOR_UK" UNIQUE ("EVALUATORID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_CALIFICATION
CREATE TABLE EVACOMUNA."TBL_CALIFICATION" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "CALIFICATION" NUMBER(38, 0) NOT NULL ENABLE,
    "SKILLID" NUMBER(38, 0) NOT NULL ENABLE,
    "EVALUATORID" NUMBER(38, 0) NOT NULL ENABLE,
    "FINALCALIFICATIONID" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_CALIFICATION_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_FINAL_CALIFICATION
CREATE TABLE EVACOMUNA."TBL_FINAL_CALIFICATION" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "FINALNOTE" NUMBER(38, 0) NOT NULL ENABLE,
    "AVERAGE" NUMBER(38, 0) NOT NULL ENABLE,
    "EVALUATEDID" NUMBER(38, 0) NOT NULL ENABLE,
    "SKILLID" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_FINAL_CALIFICATION_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_FINAL_CALIFICATION_UK" UNIQUE ("SKILLID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- SEQUENCES

-- SEQ_COMPANY
CREATE SEQUENCE EVACOMUNA.SEQ_GENERAL_INFORMATION INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_HTML_TEMPLATE
CREATE SEQUENCE EVACOMUNA.SEQ_HTML_TEMPLATE INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_USER
CREATE SEQUENCE EVACOMUNA.SEQ_USER INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_POSITION
CREATE SEQUENCE EVACOMUNA.SEQ_POSITION INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_SKILL
CREATE SEQUENCE EVACOMUNA.SEQ_SKILL INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

--SEQ_CHARACTERISTIC
CREATE SEQUENCE EVACOMUNA.SEQ_CHARACTERISTIC INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_EVALUATION
CREATE SEQUENCE EVACOMUNA.SEQ_EVALUATION INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_ASSIGNED_EVALUATION
CREATE SEQUENCE EVACOMUNA.SEQ_ASSIGNED_EVALUATION INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_CALIFICATION
CREATE SEQUENCE EVACOMUNA.SEQ_CALIFICATION INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_FINAL_CALIFICATION
CREATE SEQUENCE EVACOMUNA.SEQ_FINAL_CALIFICATION INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- TRIGGERS

-- TGR_GENERAL_INFORMATION
CREATE OR REPLACE TRIGGER TGR_GENERAL_INFORMATION BEFORE
    INSERT ON TBL_GENERAL_INFORMATION FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN
        :NEW.ID := SEQ_GENERAL_INFORMATION.NEXTVAL;
    END IF;
END;
 -- TGR_HTML_TEMPLATE
 CREATE OR REPLACE TRIGGER TGR_HTML_TEMPLATE BEFORE INSERT ON TBL_HTML_TEMPLATE FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_HTML_TEMPLATE.NEXTVAL;
END IF;
END;
 -- TGR_USER
 CREATE OR REPLACE TRIGGER TGR_USER BEFORE INSERT ON TBL_USER FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_USER.NEXTVAL;
END IF;
END;
 -- TGR_POSITION
 CREATE OR REPLACE TRIGGER TGR_POSITION BEFORE INSERT ON TBL_POSITION FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_POSITION.NEXTVAL;
END IF;
END;
 -- TGR_SKILL
 CREATE OR REPLACE TRIGGER TGR_SKILL BEFORE INSERT ON TBL_SKILL FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_SKILL.NEXTVAL;
END IF;
END;
 -- TGR_CHARACTERISTIC
 CREATE OR REPLACE TRIGGER TGR_CHARACTERISTIC BEFORE INSERT ON TBL_CHARACTERISTIC FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_CHARACTERISTIC.NEXTVAL;
END IF;
END;
 -- TGR_EVALUATION
 CREATE OR REPLACE TRIGGER TGR_EVALUATION BEFORE INSERT ON TBL_EVALUATION FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_EVALUATION.NEXTVAL;
END IF;
END;
 -- TGR_ASSIGNED_EVALUATION
 CREATE OR REPLACE TRIGGER TGR_ASSIGNED_EVALUATION BEFORE INSERT ON TBL_ASSIGNED_EVALUATION FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_ASSIGNED_EVALUATION.NEXTVAL;
END IF;
END;
 -- TGR_CALIFICATION
 CREATE OR REPLACE TRIGGER TGR_CALIFICATION BEFORE INSERT ON TBL_CALIFICATION FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_CALIFICATION.NEXTVAL;
END IF;
END;
 -- TGR_FINAL_CALIFICATION
 CREATE OR REPLACE TRIGGER TGR_FINAL_CALIFICATION BEFORE INSERT ON TBL_FINAL_CALIFICATION FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_FINAL_CALIFICATION.NEXTVAL;
END IF;
END;
 -- COMMENTS
 COMMENT ON COLUMN EVACOMUNA.TBL_POSITION.STATE IS 'states(inactive, active)';
COMMENT ON COLUMN EVACOMUNA.TBL_SKILL.STATE IS 'states(inactive, active)';
COMMENT ON COLUMN EVACOMUNA.TBL_USER.ISACTIVE IS 'N for false, Y for true';
COMMENT ON COLUMN EVACOMUNA.TBL_USER.ISADMIN IS 'N for false, Y for true';
 -- ALTERS
 -- FK TBL_ASSIGNED_EVALUATION -> TBL_USER
 ALTER TABLE EVACOMUNA."TBL_ASSIGNED_EVALUATION" ADD CONSTRAINT "FK_TBL_USER_TO_EVALUATED" FOREIGN KEY ("EVALUATEDID") REFERENCES EVACOMUNA."TBL_USER" ("ID") ENABLE;
 -- FK TBL_ASSIGNED_EVALUATION -> TBL_USER
 ALTER TABLE EVACOMUNA."TBL_ASSIGNED_EVALUATION" ADD CONSTRAINT "FK_TBL_USER_TO_EVALUATOR" FOREIGN KEY ("EVALUATORID") REFERENCES EVACOMUNA."TBL_USER" ("ID") ENABLE;
 -- FK TBL_USER -> TBL_POSITION
 ALTER TABLE EVACOMUNA."TBL_USER" ADD CONSTRAINT "FK_TBL_USER_TO_POSITION" FOREIGN KEY ("USERPOSITIONID") REFERENCES EVACOMUNA."TBL_POSITION" ("ID") ENABLE;
 -- FK TBL_POSITION_SKILL -> TBL_SKILL
 ALTER TABLE EVACOMUNA."TBL_POSITION_SKILL" ADD CONSTRAINT "FK_TBL_SKILL_TO_POSITION_SKILL" FOREIGN KEY ("SKILLID") REFERENCES EVACOMUNA."TBL_SKILL" ("ID") ENABLE;
 -- FK TBL_POSITION_SKILL -> TBL_POSITION
 ALTER TABLE EVACOMUNA."TBL_POSITION_SKILL" ADD CONSTRAINT "FK_TBL_POSITION_TO_POSITION_SKILL" FOREIGN KEY ("POSITIONID") REFERENCES EVACOMUNA."TBL_POSITION" ("ID") ENABLE;
 -- FK TBL_SKILL_CHARACTERISTIC -> TBL_SKILL
 ALTER TABLE EVACOMUNA."TBL_SKILL_CHARACTERISTIC" ADD CONSTRAINT "FK_TBL_SKILL_TO_SKILL_CHARACTERISTIC" FOREIGN KEY ("SKILLID") REFERENCES EVACOMUNA."TBL_SKILL" ("ID") ENABLE;
 -- FK TBL_SKILL_CHARACTERISTIC -> TBL_CHARACTERISTIC
 ALTER TABLE EVACOMUNA."TBL_SKILL_CHARACTERISTIC" ADD CONSTRAINT "FK_TBL_CHARACTERISTIC_TO_SKILL_CHARACTERISTIC" FOREIGN KEY ("CHARACTERISTICID") REFERENCES EVACOMUNA."TBL_CHARACTERISTIC" ("ID") ENABLE;
 --FK TBL_ASSIGNED_EVALUATION -> TBL_EVALUATION
 ALTER TABLE EVACOMUNA."TBL_ASSIGNED_EVALUATION" ADD CONSTRAINT "FK_TBL_ASSIGNED_EVALUATION_TO_EVALUATION" FOREIGN KEY ("EVALUATIONID") REFERENCES EVACOMUNA."TBL_EVALUATION" ("ID") ENABLE;
 -- FK TBL_CALIFICATION -> TBL_SKILL
 ALTER TABLE EVACOMUNA."TBL_CALIFICATION" ADD CONSTRAINT "FK_TBL_SKILL_TO_CALIFICATION" FOREIGN KEY ("SKILLID") REFERENCES EVACOMUNA."TBL_SKILL" ("ID") ENABLE;
 -- FK TBL_CALIFICATION -> TBL_ASSIGNED_EVALUATION
 ALTER TABLE EVACOMUNA."TBL_CALIFICATION" ADD CONSTRAINT "FK_TBL_ASSIGNED_EVALUATION_TO_CALIFICATION" FOREIGN KEY ("EVALUATORID") REFERENCES EVACOMUNA."TBL_ASSIGNED_EVALUATION" ("EVALUATORID") ENABLE;
 -- FK TBL_CALIFICATION -> TBL_FINAL_CALIFICATION
 ALTER TABLE EVACOMUNA."TBL_CALIFICATION" ADD CONSTRAINT "FK_TBL_FINAL_CALIFICATION_TO_CALIFICATION" FOREIGN KEY ("FINALCALIFICATIONID") REFERENCES EVACOMUNA."TBL_FINAL_CALIFICATION" ("ID") ENABLE;
 -- ALTER TRIGGERS
 ALTER TRIGGER EVACOMUNA."TGR_GENERAL_INFORMATION" ENABLE;
ALTER TRIGGER EVACOMUNA."TGR_HTML_TEMPLATE" ENABLE;
ALTER TRIGGER EVACOMUNA."TGR_USER" ENABLE;
ALTER TRIGGER EVACOMUNA."TGR_POSITION" ENABLE;
ALTER TRIGGER EVACOMUNA."TGR_SKILL" ENABLE;
ALTER TRIGGER EVACOMUNA."TGR_CHARACTERISTIC" ENABLE;
ALTER TRIGGER EVACOMUNA."TGR_EVALUATION" ENABLE;
ALTER TRIGGER EVACOMUNA."TGR_ASSIGNED_EVALUATION" ENABLE;
ALTER TRIGGER EVACOMUNA."TGR_CALIFICATION" ENABLE;
ALTER TRIGGER EVACOMUNA."TGR_FINAL_CALIFICATION" ENABLE;